[versions]
# Kotlin and Build
kotlin = "2.0.0"
android-gradle = "8.2.2"

# AndroidX and Compose
core-ktx = "1.12.0"
lifecycle = "2.7.0"
activity-compose = "1.8.2"
compose-bom = "2024.02.00"
navigation-compose = "2.7.7"

# Room
room = "2.6.1"

# Retrofit and Network
retrofit = "2.9.0"
okhttp = "4.12.0"
moshi = "1.15.0"

# DI
hilt = "2.50"

# Image Loading
glide = "4.16.0"
coil = "2.5.0"

# DataStore
datastore = "1.0.0"

# Testing
junit = "4.13.2"
androidx-test-ext = "1.1.5"
espresso = "3.5.1"

ksp-version = "2.0.0-1.0.21"

[libraries]
# Kotlin and Android Core
android-gradle = { module = "com.android.tools.build:gradle", version.ref = "android-gradle" }
kotlin-gradle = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
core-ktx = { module = "androidx.core:core-ktx", version.ref = "core-ktx" }

# Lifecycle
lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle" }

# Compose
activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activity-compose" }
compose-bom = { module = "androidx.compose:compose-bom", version.ref = "compose-bom" }
compose-ui = { module = "androidx.compose.ui:ui" }
compose-ui-graphics = { module = "androidx.compose.ui:ui-graphics" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
compose-material3 = { module = "androidx.compose.material3:material3", version = "1.2.1" }
navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "navigation-compose" }

# Room
room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }

# Retrofit and Network
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-moshi = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "retrofit" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttp-logging = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
moshi = { module = "com.squareup.moshi:moshi", version.ref = "moshi" }
moshi-kotlin = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshi" }

# Dependency Injection
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "hilt" }

# Image Loading
glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
coil = { module = "io.coil-kt:coil-compose", version.ref = "coil" }

# DataStore
datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastore" }

# Testing
junit = { module = "junit:junit", version.ref = "junit" }
androidx-test-ext = { module = "androidx.test.ext:junit", version.ref = "androidx-test-ext" }
espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso" }
compose-ui-test = { module = "androidx.compose.ui:ui-test-junit4" }

charts-android = { module = "io.github.dautovicharis:charts-android", version = "2.0.0" }

[plugins]
android-application = { id = "com.android.application", version.ref = "android-gradle" }
android-library = { id = "com.android.library", version.ref = "android-gradle" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp-version" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version = "2.1.20" }

[bundles]
compose = [
    "compose-ui",
    "compose-ui-graphics",
    "compose-ui-tooling",
    "compose-ui-tooling-preview",
    "compose-material3"
]
room = [
    "room-runtime",
    "room-ktx"
]
retrofit = [
    "retrofit",
    "retrofit-moshi",
    "okhttp",
    "okhttp-logging"
]
moshi = [
    "moshi",
    "moshi-kotlin"
]